{"version":3,"sources":["config.js","server/callsHandler.js","server/callsHandlerUtils.js","server/serverAPIs.js","redux/catalog/catalog-types.js","redux/catalog/catalog-actions.js","redux/order/order-types.js","redux/order/order-actions.js","redux/general/general-types.js","redux/general/general-actions.js","server/actionsUtils.js","server/actions.js","redux/order/order-selector.js","media/cart.png","components/layout/header-cart/header-cart.js","components/layout/header/header.js","components/layout/common-layout/common-layout.js","redux/catalog/catalog-selector.js","components/category-item/category-preview-item.js","components/categories-preview/categories-preview.js","redux/catalog/catalog-reducer.js","values/ServerUpdateStatus.js","redux/general/general-reducer.js","redux/order/order-reducer.js","redux/rootReducer.js","redux/sessionStorage.js","util/orderUtil.js","components/catalog-item/catalog-item.js","util/formatter.js","components/catalog-items/catalog-items.js","components/pages/catalog-page/catalog-page.js","components/pages/shopping-cart-page/shopping-cart-page.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","catalogURL","ordersURL","usersURL","timeoutInterval","config","require","callsHandlerUtils","uuid","standardHeaders","replace","substr","directURL","url","apiAndParams","callGET","baseURL","api","pathParams","params","URL","createParamsURL","fetchWithTimeout","method","headers","result","callPOST","body","JSON","stringify","callDELETE","uploadFile","file","onSuccess","onSuccessArgs","data","FormData","append","init","fetch","then","res","text","modifiedAPI","Object","keys","forEach","key","paramsStr","length","options","delay","callback","timer","Promise","resolve","setTimeout","timeout","race","response","console","log","code","status","json","err","callsHandler","getCategories","getItemsForCategory","createOrder","orderItemData","createOrderItem","updateOrderItem","getOrderDetails","types","SET_CATEGORIES","SET_CATEGORY_ITEMS","setCategories","categories","type","payload","setCategoryData","categoryData","SET_CURRENT_ORDER","setCurrentOrder","orderData","SERVER_CALL_PENDING","SERVER_CALL_FAILED","SERVER_CALL_FINISHED","serverCallStarted","serverCallFailed","serverCallFinished","handleServerUpdate","dispatch","generalActions","wrapGet","serverFunc","actionsCreator","actionCreator","handleServerGet","catch","wrapUpdate","orderDetails","actionUtils","serverAPIs","orderActions","orderId","id","orderSelector","state","orderNs","currentOrderSelector","createSelector","currentOrder","itemsNumberSelector","itemsNumber","orderItems","item","quantity","mapStateToProps","createStructuredSelector","withRouter","connect","className","src","cartIcon","Header","CommonLayout","children","catalogSelector","catalogNs","categoriesSelector","catalogData","categoryItemsSelector","categoryItems","fetchCategoryItems","categoryId","catalogActions","retrieveItemsForCategory","onClick","name","map","INITIAL_STATE","reducer","action","values","UPDATING","FAILED","NOT_UPDATING","serverStatus","combineReducers","generalNs","middlewere","applyMiddleware","thunk","transitionsEnhancer","handleTransitions","persistedState","serializedState","sessionStorage","getItem","parse","error","loadState","composedEnhancers","compose","store","createStore","addItem","catalogId","getState","orderItem","orderItemId","actions","subscribe","setItem","saveState","ownProps","price","alt","imageUrl","description","CatalogPage","ShoppingCartPage","App","this","props","retrieveCategories","exact","path","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5a59ef2.chunk.js","sourcesContent":["module.exports = {\r\n  catalogURL: \"http://localhost:8000/\",\r\n  ordersURL: \"http://localhost:8100/\",\r\n  usersURL: \"http://localhost:8200/\",\r\n  timeoutInterval: 10000\r\n};\r\n","const config = require(\"../config\");\r\nconst callsHandlerUtils = require(\"./callsHandlerUtils\");\r\nconst uuid = require(\"uuid-random\");\r\n\r\nfunction standardHeaders() {\r\n    return {\r\n        \"transactionId\": uuid().replace(\"-\", \"\").substr(0, 10)\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n\r\n    directURL(url, apiAndParams) {\r\n        return url + apiAndParams;\r\n    },\r\n\r\n    callGET(baseURL, api, pathParams, params) {\r\n        let URL = callsHandlerUtils.createParamsURL(baseURL, api, pathParams, params);\r\n        return callsHandlerUtils.fetchWithTimeout(\r\n            URL,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    ...standardHeaders(),\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            },\r\n            config.timeoutInterval,\r\n            (result) => {return result});\r\n    },\r\n\r\n    callPOST(baseURL, api, pathParams, params, body) {\r\n        let URL = callsHandlerUtils.createParamsURL(baseURL, api, pathParams, params);\r\n        return callsHandlerUtils.fetchWithTimeout(\r\n            URL,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    ...standardHeaders(),\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            },\r\n            config.timeoutInterval,\r\n            (result) => {return result});\r\n    },\r\n\r\n    callDELETE(baseURL, api, pathParams, params) {\r\n        let URL = callsHandlerUtils.createParamsURL(baseURL, api, pathParams, params);\r\n        return callsHandlerUtils.fetchWithTimeout(\r\n            URL,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    ...standardHeaders(),\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            },\r\n            config.timeoutInterval,\r\n            (result) => {return result});\r\n    },\r\n\r\n    uploadFile(baseURL, api, file, onSuccess, onSuccessArgs) {\r\n        const data = new FormData();\r\n        data.append(\"file\", file);\r\n        const init = {\r\n            method: \"POST\",\r\n            body: data,\r\n            headers: standardHeaders()\r\n        };\r\n\r\n        if (onSuccess) {\r\n            return fetch(baseURL + api, init)\r\n                .then(res => res.text())\r\n                .then(data => onSuccess(data, onSuccessArgs));\r\n        } else {\r\n            return fetch(baseURL + api, init)\r\n                .then(res => res.text());\r\n        }\r\n    }\r\n};","\r\nmodule.exports = {\r\n    createParamsURL: function(baseURL, api, pathParams, params) {\r\n        let URL = baseURL;\r\n        let modifiedAPI = api;\r\n        if (pathParams) {\r\n            Object.keys(pathParams).forEach(key => {\r\n                modifiedAPI = modifiedAPI.replace(\"{\" + key + \"}\", pathParams[key]);\r\n            });\r\n        }\r\n        URL += modifiedAPI;\r\n        if(params) {\r\n            let paramsStr = \"?\";\r\n            Object.keys(params).forEach(key => {\r\n                if (paramsStr.length > 1) {\r\n                    paramsStr += \"&\";\r\n                }\r\n                paramsStr += key + \"=\" + params[key];\r\n            });\r\n            URL += paramsStr;\r\n        }\r\n        return URL;\r\n    },\r\n    fetchWithTimeout: function(baseURL, options, delay, callback) {\r\n        const timer = new Promise((resolve) => {\r\n            setTimeout(resolve, delay, {\r\n                timeout: true,\r\n            });\r\n        });\r\n        return Promise.race([\r\n            fetch(baseURL, options),\r\n            timer\r\n        ]).then(\r\n            (response) => {\r\n            if(response.timeout) {\r\n                console.log(\"timeout\");\r\n                callback({code: \"failure\"});\r\n            } else if (response.status !== 200) {\r\n                console.log(\"failure\");\r\n                callback({code: \"failure\"});\r\n            } else {\r\n                return callback(response.json());\r\n            }\r\n        }, (err) => {callback({code: \"failure\"});});\r\n    }\r\n}\r\n","const callsHandler = require(\"./callsHandler\");\r\nconst config = require(\"../config\");\r\n\r\nexport function getCategories() {\r\n    return callsHandler.callGET(config.catalogURL, \"catalog/categories\");\r\n}\r\nexport function getItemsForCategory(pathParams) {\r\n    return callsHandler.callGET(config.catalogURL, \"catalog/categories/{categoryId}/items\", pathParams);\r\n}\r\nexport function createOrder(pathParams, params, orderItemData) {\r\n    return callsHandler.callPOST(config.ordersURL, \"orders\", null, null, orderItemData);\r\n}\r\nexport function createOrderItem(pathParams, params, orderItemData) {\r\n    return callsHandler.callPOST(config.ordersURL, \"orders/{orderId}/item\", pathParams, null, orderItemData);\r\n}\r\nexport function updateOrderItem(pathParams, params, orderItemData) {\r\n    return callsHandler.callPOST(config.ordersURL, \"orders/{orderId}/item/{orderItemId}\", pathParams, null, orderItemData);\r\n}\r\nexport function getOrderDetails(pathParams) {\r\n    console.log(\"getOrderDetails\", pathParams);\r\n    return callsHandler.callGET(config.ordersURL, \"orders/{orderId}\", pathParams);\r\n}\r\n","const types = {\r\n    SET_CATEGORIES: \"SET_CATEGORIES\",\r\n    SET_CATEGORY_ITEMS: \"SET_CATEGORY_ITEMS\"\r\n}\r\n\r\nexport default types;\r\n","import types from \"./catalog-types\";\r\n\r\nexport const setCategories = (categories) => ({\r\n    type: types.SET_CATEGORIES,\r\n    payload: categories\r\n});\r\n\r\nexport const setCategoryData = (categoryData) => ({\r\n    type: types.SET_CATEGORY_ITEMS,\r\n    payload: categoryData\r\n});\r\n","const types = {\r\n    SET_CURRENT_ORDER: \"SET_CURRENT_ORDER\"\r\n}\r\n\r\nexport default types;\r\n","import types from \"./order-types\";\r\n\r\nexport function setCurrentOrder(orderData) {\r\n    return {\r\n        type: types.SET_CURRENT_ORDER,\r\n        payload: orderData\r\n    }\r\n}\r\n","const types = {\r\n    SERVER_CALL_PENDING: \"SERVER_CALL_PENDING\",\r\n    SERVER_CALL_FAILED: \"SERVER_CALL_FAILED\",\r\n    SERVER_CALL_FINISHED: \"SERVER_CALL_FINISHED\"\r\n}\r\n\r\nexport default types;\r\n","import types from \"./general-types\";\r\n\r\nexport function serverCallStarted(){\r\n    return {\r\n        type: types.SERVER_CALL_PENDING\r\n    }\r\n}\r\n\r\nexport function serverCallFailed(){\r\n    return {\r\n        type: types.SERVER_CALL_FAILED\r\n    }\r\n}\r\n\r\nexport function serverCallFinished(){\r\n    return {\r\n        type: types.SERVER_CALL_FINISHED\r\n    }\r\n}\r\n\r\nexport function cancelEdit() {\r\n    return {\r\n        type: types.SERVER_CALL_FINISHED\r\n    }\r\n}\r\n","import * as generalActions from \"../redux/general/general-actions\";\r\n\r\nexport function handleServerUpdate(response, dispatch, onSuccess)\r\n{\r\n    if(!response || response.code === \"failure\"){\r\n        dispatch(generalActions.serverCallFailed());\r\n    }\r\n    else{\r\n        dispatch(generalActions.serverCallFinished());\r\n        dispatch(generalActions.cancelEdit());\r\n        onSuccess && dispatch(onSuccess(response));\r\n    }\r\n}\r\nexport function handleServerGet(response, dispatch, actionCreator, onSuccess)\r\n{\r\n    if(!response || response.code === \"failure\"){\r\n        dispatch(generalActions.serverCallFailed());\r\n    }\r\n    else{\r\n        dispatch(generalActions.serverCallFinished());\r\n        dispatch(actionCreator(response));\r\n        onSuccess && dispatch(onSuccess(response));\r\n    }\r\n}\r\n\r\nexport function wrapGet(serverFunc, actionsCreator, pathParams, params, onSuccess) {\r\n    return (dispatch) => {\r\n        dispatch(generalActions.serverCallStarted());\r\n        return serverFunc(pathParams, params)\r\n            .then(response => {\r\n                handleServerGet(response, dispatch, actionsCreator, onSuccess);\r\n            }).catch(() => dispatch(generalActions.serverCallFailed()));\r\n    }\r\n}\r\n\r\nexport function wrapUpdate(serverFunc, pathParams, params, body, onSuccess) {\r\n    return (dispatch) => {\r\n        dispatch(generalActions.serverCallStarted());\r\n        return serverFunc(pathParams, params, body)\r\n            .then(response => {\r\n                handleServerUpdate(response, dispatch, onSuccess);\r\n            }).catch(() => dispatch(generalActions.serverCallFailed()));\r\n    }\r\n}\r\n","import * as serverAPIs from \"./serverAPIs\";\r\nimport * as catalogActions from \"../redux/catalog/catalog-actions\";\r\nimport * as orderActions from \"../redux/order/order-actions\";\r\nimport * as actionUtils from \"./actionsUtils\";\r\n\r\nexport function retrieveCategories() {\r\n    return actionUtils.wrapGet(\r\n        serverAPIs.getCategories,\r\n        catalogActions.setCategories,\r\n        null,\r\n        null,\r\n    )\r\n}\r\n\r\nexport function retrieveItemsForCategory(categoryId) {\r\n    return actionUtils.wrapGet(\r\n        serverAPIs.getItemsForCategory,\r\n        catalogActions.setCategoryData,\r\n        {categoryId: categoryId},\r\n        null,\r\n    )\r\n}\r\n\r\nexport function createOrder(orderItemData) {\r\n    return actionUtils.wrapUpdate(\r\n        serverAPIs.createOrder,\r\n        null,\r\n        null,\r\n        orderItemData,\r\n        getOrderDetails\r\n    )\r\n}\r\n\r\nexport function createOrderItem(orderId, orderItemData) {\r\n    return actionUtils.wrapUpdate(\r\n        serverAPIs.createOrderItem,\r\n        {orderId: orderId},\r\n        null,\r\n        orderItemData,\r\n        getOrderDetails\r\n    )\r\n}\r\n\r\nexport function updateOrderItem(orderId, orderItemData) {\r\n    return actionUtils.wrapUpdate(\r\n        serverAPIs.updateOrderItem,\r\n        {orderId: orderId, orderItemId: orderItemData.id},\r\n        null,\r\n        orderItemData,\r\n        getOrderDetails\r\n    )\r\n}\r\n\r\nexport function getOrderDetails(orderDetails) {\r\n    return getOrderDetailsWithId(orderDetails.id);\r\n}\r\n\r\nexport function getOrderDetailsWithId(orderId) {\r\n    return actionUtils.wrapGet(\r\n        serverAPIs.getOrderDetails,\r\n        orderActions.setCurrentOrder,\r\n        {orderId: orderId},\r\n        null,\r\n    )\r\n}\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst orderSelector = (state) => state.orderNs;\r\n\r\nexport const currentOrderSelector = createSelector(\r\n    [orderSelector],\r\n    orderSelector => orderSelector.currentOrder\r\n);\r\n\r\nexport const itemsNumberSelector = createSelector(\r\n    [orderSelector],\r\n    orderSelector => {\r\n        let itemsNumber = 0;\r\n        if (orderSelector.currentOrder) {\r\n            const order = orderSelector.currentOrder;\r\n            order.orderItems.forEach(item => {\r\n                itemsNumber += item.quantity;\r\n            })\r\n        }\r\n        return itemsNumber;\r\n    }\r\n)\r\n","export default __webpack_public_path__ + \"static/media/cart.518371bf.png\";","import React from \"react\";\r\nimport \"./header-cart.scss\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {itemsNumberSelector} from \"../../../redux/order/order-selector\";\r\nimport cartIcon from \"../../../media/cart.png\";\r\n\r\nfunction HeaderCart({itemsNumber}) {\r\n    return (\r\n        <div className=\"header-cart-component\">\r\n            <img src={cartIcon}/>\r\n            <div className=\"items-number\">\r\n                {itemsNumber}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    itemsNumber: itemsNumberSelector\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(HeaderCart));\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\nimport HeaderCart from \"../header-cart/header-cart\";\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header-component\">\r\n            SHOP NOW\r\n            <div className=\"right\">\r\n                <HeaderCart />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./common-layout.scss\";\r\nimport Header from \"../header/header\";\r\n\r\nexport default function CommonLayout({children}) {\r\n    return (\r\n        <div className=\"common-layout-component\">\r\n            <Header />\r\n            <div className=\"body\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {createSelector} from \"reselect\";\r\n\r\nconst catalogSelector = (state) => state.catalogNs;\r\n\r\nexport const categoriesSelector = createSelector(\r\n    [catalogSelector],\r\n    catalogData => catalogData.categories\r\n);\r\n\r\nexport const categoryItemsSelector = createSelector(\r\n    [catalogSelector],\r\n    catalogData => catalogData.categoryItems\r\n);\r\n","import React from \"react\";\r\nimport \"./category-preview-item.scss\";\r\nimport {retrieveItemsForCategory} from \"../../server/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction CategoryPreviewItem({item, fetchCategoryItems}) {\r\n    const itemClick = () => {\r\n        fetchCategoryItems(item.id);\r\n    }\r\n    return (\r\n        <div className=\"category-preview-item-component\" key={item.id} onClick={itemClick}>\r\n            {item.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCategoryItems: (categoryId) => dispatch(retrieveItemsForCategory(categoryId))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CategoryPreviewItem);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {categoriesSelector} from \"../../redux/catalog/catalog-selector\";\r\nimport \"./categories-preview.scss\";\r\nimport CategoryPreviewItem from \"../category-item/category-preview-item\";\r\n\r\nfunction CategoriesPreview({categories}) {\r\n    return (\r\n        <div className=\"categories-preview-component\">\r\n            {\r\n                categories && categories.map(item =>\r\n                    <CategoryPreviewItem key={item.id} item={item} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    categories: categoriesSelector\r\n});\r\n\r\nexport default connect(mapStateToProps)(CategoriesPreview);\r\n","import types from \"./catalog-types\";\r\n\r\nconst INITIAL_STATE = {\r\n    categories: [],\r\n    categoryItems: []\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.SET_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            };\r\n        case types.SET_CATEGORY_ITEMS:\r\n            return {\r\n                ...state,\r\n                categoryItems: action.payload\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","const values = {\r\n    UPDATING: \"UPDATING\",\r\n    FAILED: \"FAILED\",\r\n    NOT_UPDATING: \"NOT_UPDATING\"\r\n}\r\n\r\nexport default values;\r\n","import types from \"./general-types\";\r\nimport serverStatus from \"../../values/ServerUpdateStatus\";\r\n\r\nconst INITIAL_STATE = {\r\n    serverStatus: serverStatus.NOT_UPDATING\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case types.SERVER_CALL_FAILED:\r\n            return {\r\n                ...state,\r\n                serverStatus: serverStatus.FAILED\r\n            };\r\n        case types.SERVER_CALL_PENDING:\r\n            return {\r\n                ...state,\r\n                serverStatus: serverStatus.UPDATING\r\n            };\r\n        case types.SERVER_CALL_FINISHED:\r\n            return {\r\n                ...state,\r\n                serverStatus: serverStatus.NOT_UPDATING\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import types from \"./order-types\";\r\n\r\nconst INITIAL_STATE = {\r\n    currentOrder: null\r\n}\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.SET_CURRENT_ORDER:\r\n            return {\r\n                currentOrder: action.payload\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import {combineReducers} from \"redux\";\r\nimport catalogNs from \"./catalog/catalog-reducer\";\r\nimport generalNs from \"./general/general-reducer\";\r\nimport orderNs from \"./order/order-reducer\";\r\n\r\nexport default combineReducers({\r\n    catalogNs,\r\n    generalNs,\r\n    orderNs\r\n})\r\n","import {applyMiddleware, createStore, compose} from \"redux\";\r\nimport handleTransitions from \"redux-history-transitions\";\r\nimport reducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = sessionStorage.getItem(\"state\");\r\n\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n\r\n        return JSON.parse(serializedState);\r\n    } catch (error) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        sessionStorage.setItem(\"state\", serializedState);\r\n    } catch (error) {\r\n        // Ignore write errors.\r\n    }\r\n};\r\n\r\nconst middlewere = applyMiddleware(\r\n    thunk\r\n);\r\nconst transitionsEnhancer = handleTransitions([]);\r\nconst persistedState = loadState();\r\nconst composedEnhancers = compose(middlewere, transitionsEnhancer);\r\nexport const store = createStore(reducer, persistedState, composedEnhancers);\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n","import {store} from \"../redux/sessionStorage\";\r\nimport {currentOrderSelector} from \"../redux/order/order-selector\";\r\nimport * as actions from \"../server/actions\";\r\n\r\nexport function addItem(catalogId) {\r\n    let currentOrder = currentOrderSelector(store.getState());\r\n    if (!currentOrder) {\r\n        const orderItem = {\r\n            catalogId: catalogId,\r\n            quantity: 1\r\n        }\r\n        return actions.createOrder(orderItem);\r\n    }\r\n    let orderItem = null;\r\n    currentOrder.orderItems.forEach(item => {\r\n        if (item.catalogId === catalogId) {\r\n            orderItem = item;\r\n        }\r\n    });\r\n    if (orderItem) {\r\n        orderItem.quantity++;\r\n        return actions.updateOrderItem(currentOrder.id, orderItem);\r\n    } else {\r\n        orderItem = {\r\n            catalogId: catalogId,\r\n            quantity: 1\r\n        }\r\n        return actions.createOrderItem(currentOrder.id, orderItem);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./catalog-item.scss\";\r\nimport {formatPrice} from \"../../util/formatter\";\r\nimport {connect} from \"react-redux\";\r\nimport {addItem} from \"../../util/orderUtil\";\r\n\r\nfunction CatalogItem({item, addItem}) {\r\n    return (\r\n        <div className=\"catalog-item-component\">\r\n            <div className=\"name\">\r\n                {item.name}\r\n            </div>\r\n            <div className=\"image\">\r\n                <img alt=\"\" src={item.imageUrl}/>\r\n            </div>\r\n            <div className=\"description\">\r\n                {item.description}\r\n            </div>\r\n            <div className=\"price\">\r\n                {formatPrice(item.price)}\r\n            </div>\r\n            <div className=\"bottom\" onClick={addItem}>\r\n                <div className=\"add-to-cart\">Add to cart</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    addItem: () => dispatch(addItem(ownProps.item.id))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CatalogItem);\r\n","export function formatPrice(price) {\r\n    return \"$\" + price;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {categoryItemsSelector} from \"../../redux/catalog/catalog-selector\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport \"./catalog-items.scss\";\r\nimport CatalogItem from \"../catalog-item/catalog-item\";\r\n\r\nfunction CatalogItems({categoryId, categoryItems}) {\r\n    return (\r\n        <div className=\"catalog-items-component\">\r\n            {\r\n                categoryItems && categoryItems.map(item => (\r\n                    <CatalogItem key={item.id} item={item} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    categoryItems: categoryItemsSelector\r\n});\r\n\r\nexport default connect(mapStateToProps)(CatalogItems);\r\n","import React from \"react\";\r\nimport CommonLayout from \"../../layout/common-layout/common-layout\";\r\nimport CategoriesPreview from \"../../categories-preview/categories-preview\";\r\nimport CatalogItems from \"../../catalog-items/catalog-items\";\r\nimport \"./catalog-page.scss\";\r\n\r\nexport default function CatalogPage() {\r\n    return (\r\n        <CommonLayout>\r\n            <CategoriesPreview />\r\n            <hr />\r\n            <CatalogItems />\r\n        </CommonLayout>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./shopping-cart-page.scss\";\r\nimport CommonLayout from \"../../layout/common-layout/common-layout\";\r\n\r\nexport default function ShoppingCartPage() {\r\n    return (\r\n        <CommonLayout>\r\n            Shopping Cart\r\n        </CommonLayout>\r\n    )\r\n}\r\n","import {Component} from 'react';\nimport './App.css';\nimport * as actions from \"../server/actions\";\nimport {connect} from \"react-redux\";\nimport {Switch, Route} from \"react-router-dom\";\nimport CatalogPage from \"./pages/catalog-page/catalog-page\";\nimport ShoppingCartPage from \"./pages/shopping-cart-page/shopping-cart-page\";\n\nclass App extends Component{\n  componentDidMount() {\n      this.props.retrieveCategories();\n  }\n  render() {\n    return (\n        <div className=\"app-component\">\n          <Switch>\n              <Route exact path=\"/\" component={CatalogPage} />\n              <Route exact path=\"/cart\" component={ShoppingCartPage}/>\n          </Switch>\n        </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n    retrieveCategories: () => dispatch(actions.retrieveCategories())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/sessionStorage\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n          <React.StrictMode>\n              <App />\n          </React.StrictMode>\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}